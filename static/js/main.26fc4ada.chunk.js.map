{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","arrOfCarousel","frameSize","itemWidth","animationDuration","className","style","width","map","image","src","alt","height","App","state","images","currentIndex","step","wrongFrameSize","wrongItemSize","wrongStep","buttonPrev","Math","floor","setState","buttonNext","setFrameSize","event","target","value","setItemSize","setStep","setAnimationTime","this","Error","copy","modifiedArr","slice","type","onClick","disabled","placeholder","toString","onChange","min","max","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26fc4ada.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  arrOfCarousel: string[],\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: string,\n};\n\nexport const Carousel: React.FC<Props>\n  = ({\n    arrOfCarousel = [],\n    frameSize = 390,\n    itemWidth = 130,\n    animationDuration,\n  }) => (\n    <div className=\"Carousel__div\">\n      <ul className=\"Carousel__list\" style={{ width: `${frameSize}px` }}>\n        {arrOfCarousel.map((image) => (\n          <li key={image} className=\"Carousel__li-item\">\n            <img\n              src={image}\n              alt=\"1\"\n              className=\"Carousel__image\"\n              style={{ width: `${itemWidth}px`, height: `${itemWidth}px`, animationDuration: `${animationDuration}s` }}\n              key={image}\n            />\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype Props = {};\n\ninterface State {\n  images: string[];\n  currentIndex: number;\n  frameSize: number;\n  itemWidth: number,\n  step: number,\n  animationDuration: string,\n  wrongFrameSize: boolean,\n  wrongItemSize: boolean,\n  wrongStep: boolean,\n}\n\nclass App extends React.Component<Props, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    currentIndex: 3,\n\n    frameSize: 390,\n\n    itemWidth: 130,\n\n    step: 3,\n\n    animationDuration: '1',\n\n    wrongFrameSize: false,\n\n    wrongItemSize: false,\n\n    wrongStep: false,\n  };\n\n  componentDidMount(): void {\n    if (this.state.itemWidth * this.state.step > this.state.frameSize) {\n      throw new Error('please Enter valid frame size or item width');\n    }\n  }\n\n  buttonPrev = () => {\n    if (this.state.currentIndex\n      > Math.floor(this.state.frameSize / this.state.itemWidth)) {\n      this.setState((state) => ({\n        currentIndex: state.currentIndex - state.step,\n      }));\n    }\n  };\n\n  buttonNext = () => {\n    if (this.state.currentIndex < 10) {\n      this.setState((state) => ({\n        currentIndex: state.currentIndex + state.step,\n      }));\n    }\n\n    if (this.state.currentIndex >= 10) {\n      this.setState((state) => ({\n        currentIndex: state.step,\n      }));\n    }\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (+event.target.value >= 100 && +event.target.value <= 800) {\n      this.setState({\n        frameSize: +event.target.value,\n        wrongFrameSize: false,\n      });\n    } else {\n      this.setState({\n        wrongFrameSize: true,\n      });\n    }\n  };\n\n  setItemSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (+event.target.value >= 20 && +event.target.value <= 150) {\n      this.setState({\n        itemWidth: +event.target.value,\n        wrongItemSize: false,\n      });\n    } else {\n      this.setState({\n        wrongItemSize: true,\n      });\n    }\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (+event.target.value >= 1 && +event.target.value <= 5) {\n      this.setState({\n        step: +event.target.value,\n        currentIndex: +event.target.value,\n        wrongStep: false,\n      });\n    } else {\n      this.setState({\n        wrongStep: true,\n      });\n    }\n  };\n\n  setAnimationTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (+event.target.value >= 10) {\n      this.setState({\n        animationDuration: event.target.value,\n      });\n    }\n  };\n\n  render() {\n    const copy = this.state.images;\n    let modifiedArr = copy;\n\n    if (this.state.frameSize / this.state.itemWidth >= this.state.step) {\n      modifiedArr = copy.slice(\n        this.state.currentIndex\n        - this.state.step,\n        this.state.currentIndex,\n      );\n    } else {\n      modifiedArr = [];\n    }\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {this.state.step} images</h1>\n\n        <Carousel\n          arrOfCarousel={modifiedArr}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n        />\n\n        <div className=\"Input\">\n          <div>\n            <button\n              type=\"button\"\n              className=\"Carousel__button Carousel__button1\"\n              onClick={() => {\n                this.buttonPrev();\n              }}\n              disabled={this.state.currentIndex\n            <= this.state.frameSize / this.state.itemWidth}\n            >\n              Prev\n\n            </button>\n            <button\n              type=\"button\"\n              className=\"Carousel__button Carousel__button1\"\n              onClick={() => {\n                this.buttonNext();\n              }}\n              data-cy=\"Next\"\n              disabled={this.state.currentIndex\n                >= 10}\n            >\n              Next\n\n            </button>\n          </div>\n\n          <input\n            type=\"number\"\n            placeholder={`${this.state.frameSize.toString()}px`}\n            className=\"Input__fields\"\n            onChange={this.setFrameSize}\n          />\n\n          <span>\n            {this.state.wrongFrameSize && 'Please Enter valid value'}\n          </span>\n\n          <input\n            type=\"number\"\n            placeholder={`${this.state.itemWidth.toString()}px`}\n            className=\"Input__fields\"\n            onChange={this.setItemSize}\n            min=\"20\"\n            max=\"150\"\n          />\n\n          <span>\n            {this.state.wrongItemSize && 'Please Enter valid value'}\n          </span>\n\n          <input\n            type=\"number\"\n            placeholder={`${this.state.step.toString()}bit`}\n            className=\"Input__fields\"\n            onChange={this.setStep}\n            min=\"1\"\n            max=\"5\"\n          />\n\n          <span>\n            {this.state.wrongStep && 'Please Enter valid value'}\n          </span>\n\n          <input\n            type=\"number\"\n            placeholder={`${this.state.animationDuration.toString()}s`}\n            className=\"Input__fields\"\n            onChange={this.setAnimationTime}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}